searchNodes=[{"doc":"Documentation for BankingProxy .","ref":"BankingProxy.html","title":"BankingProxy","type":"module"},{"doc":"Hello world. Examples iex&gt; BankingProxy . hello ( ) :world","ref":"BankingProxy.html#hello/0","title":"BankingProxy.hello/0","type":"function"},{"doc":"","ref":"BankingProxy.App.html","title":"BankingProxy.App","type":"module"},{"doc":"Callback implementation for Application.start/2 .","ref":"BankingProxy.App.html#start/2","title":"BankingProxy.App.start/2","type":"function"},{"doc":"","ref":"BankingProxy.BankingBackend.html","title":"BankingProxy.BankingBackend","type":"behaviour"},{"doc":"","ref":"BankingProxy.BankingBackend.html#c:list_payments/0","title":"BankingProxy.BankingBackend.list_payments/0","type":"callback"},{"doc":"","ref":"BankingProxy.BankingBackend.html#c:list_payments/1","title":"BankingProxy.BankingBackend.list_payments/1","type":"callback"},{"doc":"","ref":"BankingProxy.BankingBackend.html#c:serialize_connection/0","title":"BankingProxy.BankingBackend.serialize_connection/0","type":"callback"},{"doc":"","ref":"BankingProxy.BankingBackend.html#c:submit_payment/1","title":"BankingProxy.BankingBackend.submit_payment/1","type":"callback"},{"doc":"","ref":"BankingProxy.BankingBackend.html#t:list_payments_result/0","title":"BankingProxy.BankingBackend.list_payments_result/0","type":"type"},{"doc":"","ref":"BankingProxy.BankingBackend.html#t:payment/0","title":"BankingProxy.BankingBackend.payment/0","type":"type"},{"doc":"","ref":"BankingProxy.BankingBackend.html#t:payment_alias/0","title":"BankingProxy.BankingBackend.payment_alias/0","type":"type"},{"doc":"","ref":"BankingProxy.BankingBackend.html#t:transaction/0","title":"BankingProxy.BankingBackend.transaction/0","type":"type"},{"doc":"","ref":"BankingProxy.Protocol.html","title":"BankingProxy.Protocol","type":"module"},{"doc":"","ref":"BankingProxy.Protocol.html#dispatch_message/2","title":"BankingProxy.Protocol.dispatch_message/2","type":"function"},{"doc":"","ref":"BankingProxy.Protocol.html#init/3","title":"BankingProxy.Protocol.init/3","type":"function"},{"doc":"","ref":"BankingProxy.Protocol.html#loop/4","title":"BankingProxy.Protocol.loop/4","type":"function"},{"doc":"","ref":"BankingProxy.Protocol.html#parse/2","title":"BankingProxy.Protocol.parse/2","type":"function"},{"doc":"","ref":"BankingProxy.Protocol.html#send_response/3","title":"BankingProxy.Protocol.send_response/3","type":"function"},{"doc":"Callback implementation for :ranch_protocol.start_link/3 .","ref":"BankingProxy.Protocol.html#start_link/3","title":"BankingProxy.Protocol.start_link/3","type":"function"},{"doc":"","ref":"BankingProxy.Server.html","title":"BankingProxy.Server","type":"module"},{"doc":"","ref":"BankingProxy.Server.html#init/3","title":"BankingProxy.Server.init/3","type":"function"},{"doc":"","ref":"BankingProxy.Server.html#loop/2","title":"BankingProxy.Server.loop/2","type":"function"},{"doc":"Callback implementation for :ranch_protocol.start_link/3 .","ref":"BankingProxy.Server.html#start_link/3","title":"BankingProxy.Server.start_link/3","type":"function"},{"doc":"","ref":"BankingProxy.Supervisor.html","title":"BankingProxy.Supervisor","type":"module"},{"doc":"","ref":"BankingProxy.Supervisor.html#cert/1","title":"BankingProxy.Supervisor.cert/1","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"BankingProxy.Supervisor.html#child_spec/1","title":"BankingProxy.Supervisor.child_spec/1","type":"function"},{"doc":"","ref":"BankingProxy.Supervisor.html#start_link/0","title":"BankingProxy.Supervisor.start_link/0","type":"function"},{"doc":"API for interacting with the Bunq bank.","ref":"Bunq.html","title":"Bunq","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bunq.html#child_spec/1","title":"Bunq.child_spec/1","type":"function"},{"doc":"","ref":"Bunq.html#start_link/1","title":"Bunq.start_link/1","type":"function"},{"doc":"API for interacting with the Bunq bank.","ref":"Bunq.API.html","title":"Bunq.API","type":"module"},{"doc":"","ref":"Bunq.API.html#create_conn/2","title":"Bunq.API.create_conn/2","type":"function"},{"doc":"","ref":"Bunq.API.html#create_conn/5","title":"Bunq.API.create_conn/5","type":"function"},{"doc":"","ref":"Bunq.API.html#create_installation/1","title":"Bunq.API.create_installation/1","type":"function"},{"doc":"","ref":"Bunq.API.html#create_sandbox_company/1","title":"Bunq.API.create_sandbox_company/1","type":"function"},{"doc":"","ref":"Bunq.API.html#generate_key/0","title":"Bunq.API.generate_key/0","type":"function"},{"doc":"","ref":"Bunq.API.html#initialize/0","title":"Bunq.API.initialize/0","type":"function"},{"doc":"","ref":"Bunq.API.html#list_accounts/1","title":"Bunq.API.list_accounts/1","type":"function"},{"doc":"","ref":"Bunq.API.html#list_payments/1","title":"Bunq.API.list_payments/1","type":"function"},{"doc":"","ref":"Bunq.API.html#list_payments/2","title":"Bunq.API.list_payments/2","type":"function"},{"doc":"","ref":"Bunq.API.html#process_request_body/1","title":"Bunq.API.process_request_body/1","type":"function"},{"doc":"","ref":"Bunq.API.html#production_endpoint/0","title":"Bunq.API.production_endpoint/0","type":"function"},{"doc":"","ref":"Bunq.API.html#public_key_pem/1","title":"Bunq.API.public_key_pem/1","type":"function"},{"doc":"","ref":"Bunq.API.html#register_device/1","title":"Bunq.API.register_device/1","type":"function"},{"doc":"","ref":"Bunq.API.html#request_sandbox_money/2","title":"Bunq.API.request_sandbox_money/2","type":"function"},{"doc":"","ref":"Bunq.API.html#sandbox_endpoint/0","title":"Bunq.API.sandbox_endpoint/0","type":"function"},{"doc":"","ref":"Bunq.API.html#select_account_with_iban/2","title":"Bunq.API.select_account_with_iban/2","type":"function"},{"doc":"","ref":"Bunq.API.html#start_session/1","title":"Bunq.API.start_session/1","type":"function"},{"doc":"","ref":"Bunq.API.html#submit_payment/2","title":"Bunq.API.submit_payment/2","type":"function"},{"doc":"","ref":"Bunq.Conn.html","title":"Bunq.Conn","type":"module"},{"doc":"","ref":"Bunq.Cursor.html","title":"Bunq.Cursor","type":"module"},{"doc":"","ref":"Bunq.HTTP.html","title":"Bunq.HTTP","type":"module"},{"doc":"Issues a DELETE request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#delete/3","title":"Bunq.HTTP.delete/3","type":"function"},{"doc":"Issues a DELETE request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#delete!/3","title":"Bunq.HTTP.delete!/3","type":"function"},{"doc":"Issues a GET request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#get/3","title":"Bunq.HTTP.get/3","type":"function"},{"doc":"Issues a GET request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#get!/3","title":"Bunq.HTTP.get!/3","type":"function"},{"doc":"Issues a HEAD request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#head/3","title":"Bunq.HTTP.head/3","type":"function"},{"doc":"Issues a HEAD request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#head!/3","title":"Bunq.HTTP.head!/3","type":"function"},{"doc":"Issues an OPTIONS request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#options/3","title":"Bunq.HTTP.options/3","type":"function"},{"doc":"Issues a OPTIONS request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#options!/3","title":"Bunq.HTTP.options!/3","type":"function"},{"doc":"Issues a PATCH request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#patch/4","title":"Bunq.HTTP.patch/4","type":"function"},{"doc":"Issues a PATCH request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#patch!/4","title":"Bunq.HTTP.patch!/4","type":"function"},{"doc":"Issues a POST request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#post/4","title":"Bunq.HTTP.post/4","type":"function"},{"doc":"Issues a POST request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#post!/4","title":"Bunq.HTTP.post!/4","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_headers/1 .","ref":"Bunq.HTTP.html#process_headers/1","title":"Bunq.HTTP.process_headers/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_headers/1 .","ref":"Bunq.HTTP.html#process_request_headers/1","title":"Bunq.HTTP.process_request_headers/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_options/1 .","ref":"Bunq.HTTP.html#process_request_options/1","title":"Bunq.HTTP.process_request_options/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_params/1 .","ref":"Bunq.HTTP.html#process_request_params/1","title":"Bunq.HTTP.process_request_params/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_url/1 .","ref":"Bunq.HTTP.html#process_request_url/1","title":"Bunq.HTTP.process_request_url/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response/1 .","ref":"Bunq.HTTP.html#process_response/1","title":"Bunq.HTTP.process_response/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_body/1 .","ref":"Bunq.HTTP.html#process_response_body/1","title":"Bunq.HTTP.process_response_body/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_chunk/1 .","ref":"Bunq.HTTP.html#process_response_chunk/1","title":"Bunq.HTTP.process_response_chunk/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_headers/1 .","ref":"Bunq.HTTP.html#process_response_headers/1","title":"Bunq.HTTP.process_response_headers/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_status_code/1 .","ref":"Bunq.HTTP.html#process_response_status_code/1","title":"Bunq.HTTP.process_response_status_code/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_status_code/1 .","ref":"Bunq.HTTP.html#process_status_code/1","title":"Bunq.HTTP.process_status_code/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_url/1 .","ref":"Bunq.HTTP.html#process_url/1","title":"Bunq.HTTP.process_url/1","type":"function"},{"doc":"Issues a PUT request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Bunq.HTTP.html#put/4","title":"Bunq.HTTP.put/4","type":"function"},{"doc":"Issues a PUT request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#put!/4","title":"Bunq.HTTP.put!/4","type":"function"},{"doc":"Issues an HTTP request using a Request struct. This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request = % HTTPoison.Request { method : :post , url : &quot;https://my.website.com&quot; , body : &quot;{ \\&quot; foo \\&quot; : 3}&quot; , headers : [ { &quot;Accept&quot; , &quot;application/json&quot; } ] } request ( request )","ref":"Bunq.HTTP.html#request/1","title":"Bunq.HTTP.request/1","type":"function"},{"doc":"Issues an HTTP request with the given method to the given url. This function is usually used indirectly by get/3 , post/4 , put/4 , etc Args: method - HTTP method as an atom ( :get , :head , :post , :put , :delete , etc.) url - target url as a binary string or char list body - request body. See more below headers - HTTP headers as an orddict (e.g., [{&quot;Accept&quot;, &quot;application/json&quot;}] ) options - Keyword list of options Body: see type HTTPoison.Request Options: see type HTTPoison.Request This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request ( :post , &quot;https://my.website.com&quot; , &quot;{ \\&quot; foo \\&quot; : 3}&quot; , [ { &quot;Accept&quot; , &quot;application/json&quot; } ] )","ref":"Bunq.HTTP.html#request/5","title":"Bunq.HTTP.request/5","type":"function"},{"doc":"Issues an HTTP request with the given method to the given url, raising an exception in case of failure. request!/5 works exactly like request/5 but it returns just the response in case of a successful request, raising an exception in case the request fails.","ref":"Bunq.HTTP.html#request!/5","title":"Bunq.HTTP.request!/5","type":"function"},{"doc":"Starts HTTPoison and its dependencies.","ref":"Bunq.HTTP.html#start/0","title":"Bunq.HTTP.start/0","type":"function"},{"doc":"Requests the next message to be streamed for a given HTTPoison.AsyncResponse . See request!/5 for more detailed information.","ref":"Bunq.HTTP.html#stream_next/1","title":"Bunq.HTTP.stream_next/1","type":"function"},{"doc":"","ref":"Bunq.HTTP.html#t:body/0","title":"Bunq.HTTP.body/0","type":"type"},{"doc":"","ref":"Bunq.HTTP.html#t:headers/0","title":"Bunq.HTTP.headers/0","type":"type"},{"doc":"","ref":"Bunq.HTTP.html#t:method/0","title":"Bunq.HTTP.method/0","type":"type"},{"doc":"","ref":"Bunq.HTTP.html#t:options/0","title":"Bunq.HTTP.options/0","type":"type"},{"doc":"","ref":"Bunq.HTTP.html#t:params/0","title":"Bunq.HTTP.params/0","type":"type"},{"doc":"","ref":"Bunq.HTTP.html#t:request/0","title":"Bunq.HTTP.request/0","type":"type"},{"doc":"","ref":"Bunq.HTTP.html#t:url/0","title":"Bunq.HTTP.url/0","type":"type"},{"doc":"","ref":"Bunq.SetupCLI.html","title":"Bunq.SetupCLI","type":"module"},{"doc":"","ref":"Bunq.SetupCLI.html#main/1","title":"Bunq.SetupCLI.main/1","type":"function"},{"doc":"","ref":"Bunq.SetupCLI.html#process/2","title":"Bunq.SetupCLI.process/2","type":"function"},{"doc":"","ref":"Bunq.SetupCLI.html#write_config/3","title":"Bunq.SetupCLI.write_config/3","type":"function"},{"doc":"The banking proxy allows for a limited interaction with a banking account.","ref":"readme.html","title":"BankingProxy","type":"extras"},{"doc":"Several credentials are needed to run the application. SSL certificates First download the SSL certificate generation script: https://github.com/michaelklishin/tls-gen Then run it (without setting a password) with the &quot;basic&quot; settings. Place the resulting certificates in the certs/ folder within this project. Bunq Bunq requires several tokens &amp; keys. These can be generated by the setup tool. Run mix escript.build to generate it. Now get a Bunq API key via their app. Run ./banking_setup &lt;BUNQ_API_KEY&gt; to generate the tokens. It will ask to generate the config/dev.exs file when in development mode.","ref":"readme.html#dev-installation","title":"BankingProxy - Dev Installation","type":"extras"},{"doc":"Build a release via: https://github.com/eyra/mono/actions Go to &quot;Release Banking Proxy&quot; and &quot;Run workflow&quot;. Take the release artifacts. The banking_setup tool can be used on a machine with Erlang installed (no need for Elixir). Run it to generate the tokens etc. needed. It needs a Bunq API key as argument. Next create SSL certificates (see dev section). Configure the server so that the environment variables as defined in config/runtime.exs are set.","ref":"readme.html#production-installation","title":"BankingProxy - Production Installation","type":"extras"}]