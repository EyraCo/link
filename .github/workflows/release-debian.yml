name: Release - Debian

on:
  workflow_dispatch:
    inputs:
      bundle:
        description: "Bundle ID (next, self)"
        required: true
        default: "next"

jobs:
  tagged-release:
    runs-on: ubuntu-latest
    container: debian:12
    env:
      MIX_ENV: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add Debian 11 repository and install OpenSSL 1.1
        run: |
          echo "deb http://deb.debian.org/debian bullseye main" | tee -a /etc/apt/sources.list.d/bullseye.list
          apt update
          apt install -y libssl1.1
          rm /etc/apt/sources.list.d/bullseye.list
          apt update

      - name: Install Node.js
        run: |
          apt-get update
          apt-get install -y curl git build-essential
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs

      - name: Tag name
        id: tag
        run: echo "TAG=${{ github.event.inputs.bundle }}_$(date +%F)_${{ github.run_number }}" >> $GITHUB_ENV

      - id: setup-elixir
        uses: erlef/setup-elixir@v1
        with:
            otp-version: "25.3.2.7"
            elixir-version: "1.14.0"

      - name: Setup the Elixir project
        run: |
          mix deps.get
        working-directory: core

      - name: Build Frontend
        run: |
          ./scripts/build-frontend
        working-directory: core

      - name: Build release
        run: |
          ./scripts/build-release
        working-directory: core
        env:
          BUNDLE: ${{ github.event.inputs.bundle }}
          VERSION: ${{ env.TAG }}

      - name: Archive release
        run: |
          tar cfj "../${{ env.TAG }}.tar.bz2" "${{ env.TAG }}"
        working-directory: core

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.TAG }}"
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            ${{ env.TAG }}.tar.bz2
