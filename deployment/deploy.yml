---
- name: 'Deploy'
  hosts: all
  remote_user: '{{bundle}}'
  vars:
    home: '/home/{{bundle}}'
    src: '{{home}}/src/core'
    repo: 'https://github.com/eyraco/eylixir.git'
    asdf_version: "v0.8.1"

  tasks:
  - name: ASDF
    block:
      - name: 'Checkout'
        ansible.builtin.git:
          repo: 'https://github.com/asdf-vm/asdf.git'
          dest: '{{home}}/.asdf'
          version: '{{asdf_version}}'
          update: yes
          force: yes
        register: asdf

      - name: 'Install plugins'
        ansible.builtin.command:
          cmd: "{{home}}/.asdf/bin/asdf plugin add {{item}}"
          creates: "{{home}}/.asdf/plugins/{{item}}"
          chdir:
        with_items:
          - "erlang"
          - "elixir"
          - "nodejs"
          - "python"

      - name: Add ASDF to shell
        lineinfile:
          dest: "{{home}}/.bashrc"
          state: present
          regexp: 'asdf'
          line: '. $HOME/.asdf/asdf.sh'

  - name: 'Update source'
    ansible.builtin.git:
      repo: '{{repo}}'
      dest: '{{home}}/src'
      version: '{{branch|default("master")}}'
      update: yes
      force: yes
    register: source

  - name: Set the release dir
    ansible.builtin.set_fact:
      release_dir: '{{home}}/releases/{{source.after}}'

  - name: Build
    when: source.changed
    block:
      - name: Update ASDF deps
        ansible.builtin.command:
          cmd: "bash --rcfile ~/.asdf/asdf.sh -c 'asdf install'"
          chdir: '{{ src }}'

      - name: Hex
        ansible.builtin.command:
          cmd: "bash --rcfile ~/.asdf/asdf.sh -c 'mix local.hex --force'"
          creates: '{{home}}/.mix/archives/hex-*'
          chdir: '{{ src }}'

      - name: Rebar
        ansible.builtin.command:
          cmd: bash --rcfile ~/.asdf/asdf.sh -c 'mix local.rebar --force'
          creates: '{{home}}/.mix/rebar'
          chdir: '{{ src }}'

      - name: Get deps
        ansible.builtin.command:
          cmd: bash --rcfile ~/.asdf/asdf.sh -c 'mix deps.get'
          chdir: '{{ src }}'

      - name: Get node deps
        ansible.builtin.command:
          cmd: bash --rcfile ~/.asdf/asdf.sh -c 'npm install'
          chdir: '{{ src }}/assets'

      - name: Update browserslist package
        ansible.builtin.command:
          cmd: bash --rcfile ~/.asdf/asdf.sh -c 'npx browserslist@latest --update-db'
          chdir: '{{ src }}/assets'

      - name: Build static resources
        ansible.builtin.command:
          cmd: bash --rcfile ~/.asdf/asdf.sh -c 'npm run deploy'
          chdir: '{{ src }}/assets'

      - name: Build digest
        ansible.builtin.command:
          cmd: bash --rcfile ~/.asdf/asdf.sh -c 'mix phx.digest'
          chdir: '{{ src }}'
        environment:
          MIX_ENV: prod

      - name: Build release
        ansible.builtin.command:
          cmd: >
            bash --rcfile ~/.asdf/asdf.sh -c "mix release --overwrite --path '{{ release_dir }}'"
          chdir: '{{ src }}'
        environment:
          MIX_ENV: prod
          BUNDLE: '{{bundle}}'

      - name: Run migrations
        ansible.builtin.command:
          cmd: >
            bash --rcfile ~/.asdf/asdf.sh -c '{{ release_dir }}/bin/core eval "Core.Release.migrate"'
          chdir: '{{ src }}'
        environment:
          MIX_ENV: prod
          DB_NAME: '{{db_name}}'
          DB_USER: '{{db_user}}'
          DB_HOST: '{{db_host}}'
          DB_PASS: '{{db_pass}}'
          BUNDLE_DOMAIN: '{{bundle_domain}}'
          SECRET_KEY_BASE: '{{secret_key_base}}'

      - name: Symlink the new release
        ansible.builtin.file:
          src: '{{release_dir}}'
          dest: '{{home}}/current'
          state: link
        notify: Restart bundle

      - name: Cleanup older releases
        ansible.builtin.shell:
          cmd: 'ls --sort=time | tail -n +4 | xargs rm -rf'
          chdir: '{{home}}/releases'

  handlers:
    - name: Restart bundle
      ansible.builtin.command:
        cmd: 'sudo systemctl restart {{bundle}}.service'
        warn: no
